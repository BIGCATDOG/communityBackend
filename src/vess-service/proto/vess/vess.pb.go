// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/vess/vess.proto

package go_micro_srv_vessel

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/asim/go-micro/v3/client"
	server "github.com/asim/go-micro/v3/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 每条货轮的熟悉
type Vessel struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Capacity             int32    `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	MaxWeight            int32    `protobuf:"varint,3,opt,name=max_weight,json=maxWeight,proto3" json:"max_weight,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Available            bool     `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
	OwerId               string   `protobuf:"bytes,6,opt,name=ower_id,json=owerId,proto3" json:"ower_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vessel) Reset()         { *m = Vessel{} }
func (m *Vessel) String() string { return proto.CompactTextString(m) }
func (*Vessel) ProtoMessage()    {}
func (*Vessel) Descriptor() ([]byte, []int) {
	return fileDescriptor_4854a706581f5ee8, []int{0}
}

func (m *Vessel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vessel.Unmarshal(m, b)
}
func (m *Vessel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vessel.Marshal(b, m, deterministic)
}
func (m *Vessel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vessel.Merge(m, src)
}
func (m *Vessel) XXX_Size() int {
	return xxx_messageInfo_Vessel.Size(m)
}
func (m *Vessel) XXX_DiscardUnknown() {
	xxx_messageInfo_Vessel.DiscardUnknown(m)
}

var xxx_messageInfo_Vessel proto.InternalMessageInfo

func (m *Vessel) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Vessel) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Vessel) GetMaxWeight() int32 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

func (m *Vessel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Vessel) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

func (m *Vessel) GetOwerId() string {
	if m != nil {
		return m.OwerId
	}
	return ""
}

// 等待运送的货物
type Specification struct {
	Capacity             int32    `protobuf:"varint,1,opt,name=capacity,proto3" json:"capacity,omitempty"`
	MaxWeight            int32    `protobuf:"varint,2,opt,name=max_weight,json=maxWeight,proto3" json:"max_weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Specification) Reset()         { *m = Specification{} }
func (m *Specification) String() string { return proto.CompactTextString(m) }
func (*Specification) ProtoMessage()    {}
func (*Specification) Descriptor() ([]byte, []int) {
	return fileDescriptor_4854a706581f5ee8, []int{1}
}

func (m *Specification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Specification.Unmarshal(m, b)
}
func (m *Specification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Specification.Marshal(b, m, deterministic)
}
func (m *Specification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Specification.Merge(m, src)
}
func (m *Specification) XXX_Size() int {
	return xxx_messageInfo_Specification.Size(m)
}
func (m *Specification) XXX_DiscardUnknown() {
	xxx_messageInfo_Specification.DiscardUnknown(m)
}

var xxx_messageInfo_Specification proto.InternalMessageInfo

func (m *Specification) GetCapacity() int32 {
	if m != nil {
		return m.Capacity
	}
	return 0
}

func (m *Specification) GetMaxWeight() int32 {
	if m != nil {
		return m.MaxWeight
	}
	return 0
}

// 货轮装得下的话
// 返回的多条货轮信息
type Response struct {
	Vessel               *Vessel   `protobuf:"bytes,1,opt,name=vessel,proto3" json:"vessel,omitempty"`
	Vessels              []*Vessel `protobuf:"bytes,2,rep,name=vessels,proto3" json:"vessels,omitempty"`
	Created              bool      `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_4854a706581f5ee8, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetVessel() *Vessel {
	if m != nil {
		return m.Vessel
	}
	return nil
}

func (m *Response) GetVessels() []*Vessel {
	if m != nil {
		return m.Vessels
	}
	return nil
}

func (m *Response) GetCreated() bool {
	if m != nil {
		return m.Created
	}
	return false
}

func init() {
	proto.RegisterType((*Vessel)(nil), "go.micro.srv.vessel.Vessel")
	proto.RegisterType((*Specification)(nil), "go.micro.srv.vessel.Specification")
	proto.RegisterType((*Response)(nil), "go.micro.srv.vessel.Response")
}

func init() { proto.RegisterFile("proto/vess/vess.proto", fileDescriptor_4854a706581f5ee8) }

var fileDescriptor_4854a706581f5ee8 = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xd1, 0x4a, 0xeb, 0x40,
	0x10, 0xbd, 0x9b, 0xb6, 0x69, 0x3a, 0x97, 0xfa, 0x30, 0x22, 0x2e, 0xd5, 0x42, 0xc8, 0x53, 0x9f,
	0x22, 0xb4, 0xf8, 0x01, 0x22, 0x14, 0xf4, 0x31, 0x15, 0x7d, 0x2c, 0xdb, 0xcd, 0x58, 0x17, 0x9a,
	0x6c, 0x48, 0x42, 0x5a, 0xff, 0xc2, 0x2f, 0xf0, 0x0f, 0xfc, 0x47, 0xe9, 0xc4, 0x56, 0x2a, 0xa1,
	0x7d, 0x09, 0x73, 0x66, 0xce, 0x9c, 0x39, 0x39, 0x2c, 0x5c, 0x64, 0xb9, 0x2d, 0xed, 0x4d, 0x45,
	0x45, 0xc1, 0x9f, 0x90, 0x31, 0x9e, 0x2f, 0x6d, 0x98, 0x18, 0x9d, 0xdb, 0xb0, 0xc8, 0xab, 0x70,
	0x3b, 0xa0, 0x55, 0xf0, 0x29, 0xc0, 0x7d, 0xe6, 0x12, 0xcf, 0xc0, 0x31, 0xb1, 0x14, 0xbe, 0x18,
	0xf5, 0x22, 0xc7, 0xc4, 0x38, 0x00, 0x4f, 0xab, 0x4c, 0x69, 0x53, 0xbe, 0x4b, 0xc7, 0x17, 0xa3,
	0x4e, 0xb4, 0xc7, 0x38, 0x04, 0x48, 0xd4, 0x66, 0xbe, 0x26, 0xb3, 0x7c, 0x2b, 0x65, 0x8b, 0xa7,
	0xbd, 0x44, 0x6d, 0x5e, 0xb8, 0x81, 0x08, 0xed, 0x54, 0x25, 0x24, 0xdb, 0x2c, 0xc6, 0x35, 0x5e,
	0x43, 0x4f, 0x55, 0xca, 0xac, 0xd4, 0x62, 0x45, 0xb2, 0xe3, 0x8b, 0x91, 0x17, 0xfd, 0x36, 0xf0,
	0x12, 0xba, 0x76, 0x4d, 0xf9, 0xdc, 0xc4, 0xd2, 0xe5, 0x25, 0x77, 0x0b, 0x1f, 0xe2, 0xe0, 0x11,
	0xfa, 0xb3, 0x8c, 0xb4, 0x79, 0x35, 0x5a, 0x95, 0xc6, 0xa6, 0x07, 0xb6, 0xc4, 0x51, 0x5b, 0xce,
	0x1f, 0x5b, 0xc1, 0x87, 0x00, 0x2f, 0xa2, 0x22, 0xb3, 0x69, 0x41, 0x38, 0x01, 0xb7, 0xce, 0x80,
	0x55, 0xfe, 0x8f, 0xaf, 0xc2, 0x86, 0x7c, 0xc2, 0x3a, 0x9b, 0xe8, 0x87, 0x8a, 0xb7, 0xd0, 0xad,
	0xab, 0x42, 0x3a, 0x7e, 0xeb, 0xd4, 0xd6, 0x8e, 0x8b, 0x12, 0xba, 0x3a, 0x27, 0x55, 0x52, 0xcc,
	0x59, 0x79, 0xd1, 0x0e, 0x8e, 0xbf, 0x04, 0xf4, 0x6b, 0xf6, 0x8c, 0xf2, 0xca, 0x68, 0xc2, 0x27,
	0xe8, 0x4f, 0x4d, 0x1a, 0xdf, 0xed, 0xa3, 0x09, 0x1a, 0x4f, 0x1c, 0x84, 0x32, 0x18, 0x36, 0x72,
	0x76, 0xff, 0x1a, 0xfc, 0xc3, 0x29, 0xb8, 0xf7, 0x7c, 0x12, 0x8f, 0x39, 0x3e, 0xa9, 0xb3, 0x70,
	0xf9, 0x2d, 0x4d, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x7d, 0xaa, 0x26, 0x62, 0x64, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for VesselService service

type VesselServiceClient interface {
	// 检查是否有能运送货物的轮船
	FindAvailable(ctx context.Context, in *Specification, opts ...client.CallOption) (*Response, error)
	// 创建货轮
	Create(ctx context.Context, in *Vessel, opts ...client.CallOption) (*Response, error)
}

type vesselServiceClient struct {
	c           client.Client
	serviceName string
}

func NewVesselServiceClient(serviceName string, c client.Client) VesselServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "go.micro.srv.vessel"
	}
	return &vesselServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *vesselServiceClient) FindAvailable(ctx context.Context, in *Specification, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "VesselService.FindAvailable", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vesselServiceClient) Create(ctx context.Context, in *Vessel, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "VesselService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for VesselService service

type VesselServiceHandler interface {
	// 检查是否有能运送货物的轮船
	FindAvailable(context.Context, *Specification, *Response) error
	// 创建货轮
	Create(context.Context, *Vessel, *Response) error
}

func RegisterVesselServiceHandler(s server.Server, hdlr VesselServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&VesselService{hdlr}, opts...))
}

type VesselService struct {
	VesselServiceHandler
}

func (h *VesselService) FindAvailable(ctx context.Context, in *Specification, out *Response) error {
	return h.VesselServiceHandler.FindAvailable(ctx, in, out)
}

func (h *VesselService) Create(ctx context.Context, in *Vessel, out *Response) error {
	return h.VesselServiceHandler.Create(ctx, in, out)
}
